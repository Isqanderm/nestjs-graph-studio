name: Release & Publish

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags like v1.0.0, v1.2.3, etc.

# Explicit permissions following least privilege principle
permissions:
  contents: write  # For creating GitHub releases
  id-token: write  # For npm provenance

jobs:
  # Job 1: Validate Release
  validate:
    name: Validate Release
    runs-on: ubuntu-latest
    timeout-minutes: 10

    outputs:
      version: ${{ steps.get-version.outputs.version }}
      tag: ${{ steps.get-version.outputs.tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version from tag
        id: get-version
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          VERSION=${TAG#v}
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Release tag: $TAG"
          echo "Version: $VERSION"

      - name: Verify package.json version matches tag
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          TAG_VERSION="${{ steps.get-version.outputs.version }}"
          
          if [ "$PACKAGE_VERSION" != "$TAG_VERSION" ]; then
            echo "‚ùå Error: package.json version ($PACKAGE_VERSION) does not match tag version ($TAG_VERSION)"
            exit 1
          fi
          
          echo "‚úÖ Version match confirmed: $PACKAGE_VERSION"

      - name: Verify CHANGELOG.md has entry for this version
        run: |
          VERSION="${{ steps.get-version.outputs.version }}"
          
          if grep -q "## \[$VERSION\]" CHANGELOG.md; then
            echo "‚úÖ CHANGELOG.md has entry for version $VERSION"
          else
            echo "‚ö†Ô∏è Warning: CHANGELOG.md does not have entry for version $VERSION"
            echo "Please update CHANGELOG.md before releasing"
          fi

  # Job 2: Run Tests
  test:
    name: Run Full Test Suite
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: validate

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run backend tests
        run: npm run test:coverage

      - name: Run UI tests
        run: npm run test:ui:coverage

      - name: Verify coverage thresholds
        run: |
          echo "Verifying coverage thresholds..."
          
          # Backend coverage check
          node -e "
            const fs = require('fs');
            const summary = JSON.parse(fs.readFileSync('coverage/coverage-summary.json', 'utf8'));
            const total = summary.total;
            
            if (total.lines.pct < 90) {
              console.error('‚ùå Backend coverage below 90%');
              process.exit(1);
            }
            console.log('‚úÖ Backend coverage: ' + total.lines.pct + '%');
          "
          
          # UI coverage check
          node -e "
            const fs = require('fs');
            const summary = JSON.parse(fs.readFileSync('ui/coverage/coverage-summary.json', 'utf8'));
            const total = summary.total;
            
            if (total.lines.pct < 70) {
              console.error('‚ùå UI coverage below 70%');
              process.exit(1);
            }
            console.log('‚úÖ UI coverage: ' + total.lines.pct + '%');
          "

  # Job 3: Build
  build:
    name: Build Package
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Verify build artifacts
        run: |
          echo "Verifying build artifacts..."
          
          # Check that all required files exist
          test -f dist/index.js || (echo "‚ùå Missing dist/index.js" && exit 1)
          test -f dist/index.mjs || (echo "‚ùå Missing dist/index.mjs" && exit 1)
          test -f dist/index.d.ts || (echo "‚ùå Missing dist/index.d.ts" && exit 1)
          test -f dist/ui/index.html || (echo "‚ùå Missing dist/ui/index.html" && exit 1)
          
          echo "‚úÖ All build artifacts present"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-build
          path: dist/
          retention-days: 7

  # Job 4: Publish to npm
  publish-npm:
    name: Publish to npm
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: build
    environment: npm-publish  # Use GitHub environment for additional protection

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Publish to npm
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Verify publication
        run: |
          VERSION="${{ needs.validate.outputs.version }}"
          echo "Waiting for npm to propagate..."
          sleep 10
          
          # Verify the package is available on npm
          if npm view nestjs-graph-studio@$VERSION version; then
            echo "‚úÖ Package successfully published to npm"
          else
            echo "‚ö†Ô∏è Package may not be immediately available on npm"
          fi

  # Job 5: Create GitHub Release
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [validate, publish-npm]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-build
          path: dist/

      - name: Extract changelog for this version
        id: changelog
        run: |
          VERSION="${{ needs.validate.outputs.version }}"
          
          # Extract changelog section for this version
          awk "/## \[$VERSION\]/,/## \[/" CHANGELOG.md | sed '$d' > release-notes.md
          
          # If no specific changelog found, use a default message
          if [ ! -s release-notes.md ]; then
            echo "Release $VERSION" > release-notes.md
            echo "" >> release-notes.md
            echo "See [CHANGELOG.md](CHANGELOG.md) for details." >> release-notes.md
          fi
          
          cat release-notes.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.validate.outputs.tag }}
          name: Release ${{ needs.validate.outputs.version }}
          body_path: release-notes.md
          draft: false
          prerelease: false
          files: |
            dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release summary
        run: |
          echo "# üéâ Release Published Successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** ${{ needs.validate.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Tag:** ${{ needs.validate.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## üì¶ Published To:" >> $GITHUB_STEP_SUMMARY
          echo "- ‚úÖ npm: https://www.npmjs.com/package/nestjs-graph-studio/v/${{ needs.validate.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- ‚úÖ GitHub Releases: https://github.com/${{ github.repository }}/releases/tag/${{ needs.validate.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## üìù Installation:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "npm install nestjs-graph-studio@${{ needs.validate.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

