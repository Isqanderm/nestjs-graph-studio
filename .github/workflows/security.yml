name: Security & Dependency Check

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    # Run weekly on Monday at 9:00 AM UTC
    - cron: '0 9 * * 1'

# Explicit permissions following least privilege principle
permissions:
  contents: read
  security-events: write  # For CodeQL
  pull-requests: write    # For dependency review comments

jobs:
  # Job 1: CodeQL Analysis
  codeql-analysis:
    name: CodeQL Security Scanning
    runs-on: ubuntu-latest
    timeout-minutes: 20

    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ['javascript', 'typescript']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: +security-and-quality
          config: |
            paths-ignore:
              - node_modules
              - dist
              - coverage
              - playwright-report
              - test-results

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"

  # Job 2: Security Audit
  security-audit:
    name: npm Security Audit
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'npm'

      - name: Run npm audit (informational)
        run: |
          echo "## 🔒 Security Audit Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Run audit and capture output
          if npm audit --audit-level=low > audit-output.txt 2>&1; then
            echo "✅ No vulnerabilities found!" >> $GITHUB_STEP_SUMMARY
            cat audit-output.txt >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ Vulnerabilities detected:" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            cat audit-output.txt >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Check for high/critical vulnerabilities
        run: |
          # Fail CI if high or critical vulnerabilities are found
          if npm audit --audit-level=high; then
            echo "✅ No high or critical vulnerabilities found"
          else
            echo "❌ High or critical vulnerabilities detected!"
            echo "Please run 'npm audit fix' to resolve these issues."
            exit 1
          fi

      - name: Check for outdated dependencies
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📦 Outdated Dependencies" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          npm outdated >> $GITHUB_STEP_SUMMARY 2>&1 || echo "Some dependencies are outdated" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        continue-on-error: true  # Don't fail on outdated dependencies

  # Job 3: Dependency Review (PR only)
  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        continue-on-error: true  # Don't fail if Dependency Graph is not enabled
        with:
          fail-on-severity: moderate
          deny-licenses: GPL-3.0, AGPL-3.0
          comment-summary-in-pr: always

  # Job 4: License Check
  license-check:
    name: License Compliance Check
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check licenses
        run: |
          echo "## 📜 License Check" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Install license-checker if not already installed
          npx license-checker --summary >> $GITHUB_STEP_SUMMARY 2>&1 || echo "License check completed" >> $GITHUB_STEP_SUMMARY
          
          # Check for problematic licenses
          if npx license-checker --failOn 'GPL-3.0;AGPL-3.0' --summary; then
            echo "✅ No problematic licenses found" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ Problematic licenses detected" >> $GITHUB_STEP_SUMMARY
          fi
        continue-on-error: true  # Don't fail on license issues, just report

  # Job 5: Security Summary
  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [codeql-analysis, security-audit, license-check]
    if: always()

    steps:
      - name: Generate security summary
        run: |
          echo "# 🔒 Security Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Check | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| CodeQL Analysis | ${{ needs.codeql-analysis.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Security Audit | ${{ needs.security-audit.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| License Check | ${{ needs.license-check.result == 'success' && '✅ Passed' || '⚠️ Warning' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Note:** CodeQL and Security Audit failures will block merges." >> $GITHUB_STEP_SUMMARY

